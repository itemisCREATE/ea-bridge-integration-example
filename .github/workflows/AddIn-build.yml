
name: build
run-name: triggered by ${{ github.actor }}

on: [ push ]
 
jobs:

  cli-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build & test with Maven
      run: |
        cd CLI
        mvn -T 2 clean verify -B

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CLI
        compression-level: 0 # artifact is already compressed
        retention-days: 2
        path: CLI/com.yakindu.bridges.ea.example.cli.product/target/products/*.zip


  addin-build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: |
        cd AddIn
        msbuild /t:restore .\Itemis_Integrate_EA_Example_AddIn.sln /p:Configuration=Release

    # Create the app package by building and packaging the project
    - name: Create the app package
      run: |
        cd AddIn
        msbuild Itemis_Integrate_EA_Example_AddIn.sln /p:Configuration=Release /p:Platform="Any CPU" /detailedsummary /v:detailed

    # Upload the installer package
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Installer
        path: AddIn/Itemis_Integrate_EA_Example_AddIn_Setup/bin/x86/Release/*.msi
